# TEMPLATE GITLAB-CI FOR CCAO SHINY APPS

# This is a GitLab CI config file used to build a shiny app as a docker image
# This file defines the steps GitLab runners should take to build and
# subsequently deploy applications

# Starting with Docker as a base image, containers are constructed using DinD
image: docker:18

stages:
  - build
  - push

services:
  - docker:18.09.7-dind

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2

before_script:
  - echo $CI_REGISTRY_PASSWORD | docker login --password-stdin -u $CI_REGISTRY_USER $CI_REGISTRY

# Goal is to build from the Dockerfile and then tag with the commit hash
build:
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  only:
    - master
  script:
    - >
      docker build
      --pull
      --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`
      --build-arg VCS_NAME=$CI_PROJECT_NAME
      --build-arg VCS_URL=$CI_PROJECT_URL
      --build-arg VCS_REF=$CI_COMMIT_SHA
      --build-arg VCS_REF_SHORT=$CI_COMMIT_SHORT_SHA
      --build-arg VCS_VER=$CI_COMMIT_REF_NAME
      --cache-from $CI_REGISTRY_IMAGE:latest
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

# Goal is to tag the "master" branch as "latest"
push:
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_STRATEGY: none
  stage: push
  only:
    - master
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
