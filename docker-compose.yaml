version: '3.6'
services:

  shinyproxy:
    build: .
    image: ${CCAO_REGISTRY_URL}/shiny_server:latest
    container_name: shiny_server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    networks:
      - proxynet
      - shiny_monitor_net
    # Environmental variables are loaded from .env file
    environment:
      - CCAO_REGISTRY_URL
      - LDAPS_USER
      - LDAPS_PASSWORD
      - JAVA_TRUST_STORE_PASSWORD
    secrets:
      - DB_CONFIG
      - DC_CERT

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./secrets/config.json:/config.json
    networks:
      - proxynet
    environment:
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_MONITOR_ONLY=true
      - WATCHTOWER_NO_RESTART=true
      - WATCHTOWER_POLL_INTERVAL=120
    restart: always

  # Fake app slugs to ensure that shinyproxy always has an image to run
  shiny_app_pinval_production:
    image: ${CCAO_REGISTRY_URL}/shiny_app_pinval:latest
    entrypoint: ["echo", "PINVAL (Production) Loaded"]
    networks:
      - proxynet
    restart: "no"
  shiny_app_pinval_staging:
    image: ${CCAO_REGISTRY_URL}/shiny_app_pinval:staging
    entrypoint: ["echo", "PINVAL (Staging) Loaded"]
    networks:
      - proxynet
    restart: "no"
  shiny_app_township_diagnostic:
    image: ${CCAO_REGISTRY_URL}/shiny_app_township_diagnostic:latest
    entrypoint: ["echo", "Township Diagnostic (Alpha) Loaded"]
    networks:
      - proxynet
    restart: "no"
  shiny_app_township_diagnostic_staging:
    image: ${CCAO_REGISTRY_URL}/shiny_app_township_diagnostic:staging
    entrypoint: ["echo", "Township Diagnostic (Alpha Staging) Loaded"]
    networks:
      - proxynet
    restart: "no"
  shiny_app_ic_pinval:
    image: ${CCAO_REGISTRY_URL}/shiny_app_ic_pinval:latest
    entrypoint: ["echo", "IC PINVAL (Production) Loaded"]
    networks:
      - proxynet
    restart: "no"
  shiny_app_ic_pinval_staging:
    image: ${CCAO_REGISTRY_URL}/shiny_app_ic_pinval:staging
    entrypoint: ["echo", "IC PINVAL (Staging) Loaded"]
    networks:
      - proxynet
    restart: "no"
  app_data_integrity_report:
    image: ${CCAO_REGISTRY_URL}/app_data_integrity_report:latest
    entrypoint: ["echo", "Data Integrity Report (Production) Loaded"]
    networks:
      - proxynet
    restart: "no"
  app_data_integrity_report_staging:
    image: ${CCAO_REGISTRY_URL}/app_data_integrity_report:staging
    entrypoint: ["echo", "Data Integrity Report (Staging) Loaded"]
    networks:
      - proxynet
    restart: "no"
  shiny_app_rpie:
    image: ${CCAO_REGISTRY_URL}/shiny_app_rpie:latest
    entrypoint: ["echo", "RPIE App Loaded"]
    networks:
      - proxynet
    restart: "no"

# Define network to be shared between containers
# Subnet is changed so as not to conflict with the CCAO default network
# shiny_monitor_net is imported from the shiny_monitor app. It connects to that
# app's postgres DB for the purpose of tracking entered PINs
networks:
  proxynet:
    ipam:
      config:
        - subnet: 192.27.0.0/16
    name: shiny_server_net
  shiny_monitor_net:
    external: true

# Database credential files that get shared to individual containers
secrets:
  DB_CONFIG:
    file: secrets/DB_CONFIG
  DC_CERT:
    file: secrets/DC_CERT
